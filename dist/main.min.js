"use strict";var gulp=require("gulp"),uglify=require("gulp-uglify"),concat=require("gulp-concat"),currentFolderJsFile="./*.js",libFolderJsFile="./lib/**/*.js";gulp.task("uglify",function(){return gulp.src([currentFolderJsFile,libFolderJsFile]).pipe(uglify()).pipe(concat("main.min.js")).pipe(gulp.dest("dist"))}),gulp.task("watch",function(){gulp.watch([currentFolderJsFile,"!gulpfile.js",libFolderJsFile],["uglify"])}),gulp.task("default",["uglify","watch"]);
"use strict";var express=require("express"),bodyParser=require("body-parser"),routes=require("./lib/routes/all.js"),mongoose=require("mongoose"),config=require("./config/db.js"),app=express();app.use(bodyParser.urlencoded({extended:!0})),mongoose.connect(config.uri+config.dbName);var dbEvent=mongoose.connection;dbEvent.on("error",function(){console.error("mongodb connection error!")}),dbEvent.once("open",function(){console.log("mongodb connected!")}),app.use("/api",routes),app.listen(8888,function(){console.log("listening on 8888")});
var express=require("express"),bodyParser=require("body-parser"),routes=require("./lib/route/posts"),app=express();app.use(bodyParser.urlencoded({extended:!0})),app.use("/api",routes),app.get("/",function(e,s){s.send("Hello This is my 1st page")}),exports.app=app,app.listen(8888,function(){console.log("Listening on 8888")});
var mongoose=require("mongoose"),Comment=require("../model/comment.js"),CommentController={};CommentController.addComment=function(o,e){},CommentController.editComment=function(o,e){},CommentController.deleteComment=function(o,e){},CommentController.editAuthorName=function(o,e){},CommentController.editAuthorPassword=function(o,e){},module.exports=CommentController;
var mongoose=require("mongoose"),Menu=require("../model/menu.js"),MenuController={};MenuController.showPosts=function(e,n){},MenuController.addMenu=function(e,n){},MenuController.editMenuName=function(e,n){},MenuController.deleteMenu=function(e,n){},module.exports=MenuController;
var mongoose=require("mongoose"),Post=require("../model/post.js"),PostController={};PostController.sendNewPostWindow=function(o,t){},PostController.sendEditPostWindow=function(o,t){},PostController.addPost=function(o,t){},PostController.editPost=function(o,t){},PostController.deletePost=function(o,t){},PostController.showPost=function(o,t){},module.exports=PostController;
var showPost=function(s,o){o.send("<h1> this is SHOW POST FUNCTION </h1>")};exports.showPost=showPost;
var mongoose=require("mongoose"),Schema=mongoose.Schema,ObjectId=Schema.Types.ObjectId,CommentSchema=new Schema({writerName:{type:String,required:!0},password:{type:String,required:!0},email:{type:String},text:{type:String,required:!0},written:{type:Date,"default":Date.now},edited:{type:Date,"default":Date.now},comments:{type:[ObjectId]}}),CommentModel=mongoose.model("comment",CommentSchema);module.exports=CommentModel;
var mongoose=require("mongoose"),Schema=mongoose.Schema,ObjectId=Schema.ObjectId,MenuSchema=new Schema({name:{type:String,required:!0},posts:{type:[ObjectId]}}),MenuModel=mongoose.model("menu",MenuSchema);module.exports=MenuModel;
var mongoose=require("mongoose"),Schema=mongoose.Schema,ObjectId=Schema.Types.ObjectId,PostSchema=new Schema({author:{type:ObjectId,required:!0},title:{type:String,required:!0},text:{type:String,required:!0},comments:{type:[ObjectId]},written:{type:Date,"default":Date.now},edited:{type:Date,"default":Date.now},readCount:{type:Number,required:!0,"default":0}}),PostModel=mongoose.model("Post",PostSchema);module.exports=PostModel;
var express=require("express"),menu=require("./menu"),posts=require("./posts"),comments=require("./comments"),app=express();app.use("/menu",menu),app.use("/posts",posts),app.use("/comments",comments),module.exports=app;


var express=require("express"),PostController=require("../controller/posts"),app=express();app.get("/:id",PostController.showPost),app.get("/add",PostController.sendNewPostWindow),app.post("/add",PostController.addPost),app.get("/edit/:id",PostController.sendEditPostWindow),app.put("/edit/:id",PostController.editPost),app["delete"]("/delete/:id",PostController.deletePost),module.exports=app;
var express=require("express"),postController=require("../controller/posts.js"),app=express();app.get("/posts",postController.showPost),module.exports=app;